name: AI PR Review

on:
  issue_comment:
    types: [created]

jobs:
  review:
    # Solo ejecutar si es un PR y contiene los comandos específicos
    if: |
      github.event.issue.pull_request && 
      (contains(github.event.comment.body, '/review') || contains(github.event.comment.body, '/summary'))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get PR diff
        id: diff
        run: |
          PR_NUMBER="${{ github.event.issue.number }}"
          PR_DIFF_URL=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${PR_NUMBER}" \
            | jq -r '.diff_url')
          
          PR_DIFF=$(curl -s "$PR_DIFF_URL")
          echo "DIFF<<EOF" >> $GITHUB_OUTPUT
          echo "$PR_DIFF" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install openai

      - name: Generate Review
        if: contains(github.event.comment.body, '/review')
        uses: actions/github-script@v6
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          PR_DIFF: ${{ steps.diff.outputs.DIFF }}
        with:
          script: |
            const { OpenAI } = require('openai');
            const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

            const prompt = `Como experto desarrollador Android, revisa este Pull Request:

            Cambios:
            ${process.env.PR_DIFF}

            Proporciona una revisión estructurada que incluya:

            ## 🎯 Resumen General
            - Objetivo principal de los cambios
            - Impacto en la aplicación

            ## 💡 Aspectos Positivos
            - Buenas prácticas implementadas
            - Patrones de diseño utilizados
            - Optimizaciones destacables

            ## 🚨 Aspectos a Mejorar
            - Problemas potenciales
            - Sugerencias de mejora
            - Posibles bugs o edge cases

            ## 📝 Recomendaciones
            - Sugerencias específicas con ejemplos
            - Referencias a documentación

            Sé específico y constructivo en tus comentarios.`;

            const completion = await openai.chat.completions.create({
              model: "gpt-4",
              messages: [
                { 
                  role: "system", 
                  content: "Eres un experto desarrollador Android especializado en Kotlin, arquitectura limpia y mejores prácticas de desarrollo móvil."
                },
                { role: "user", content: prompt }
              ],
              temperature: 0.2
            });

            const review = completion.choices[0].message.content;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `# 🔍 Revisión de Código\n\n${review}`
            });

      - name: Generate Summary
        if: contains(github.event.comment.body, '/summary')
        uses: actions/github-script@v6
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          PR_DIFF: ${{ steps.diff.outputs.DIFF }}
        with:
          script: |
            const { OpenAI } = require('openai');
            const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

            const prompt = `Como experto desarrollador Android, genera un resumen técnico educativo de este Pull Request:

            Cambios:
            ${process.env.PR_DIFF}

            Estructura el resumen así:

            ## 🔍 Descripción Técnica
            - Componentes modificados
            - Cambios en la arquitectura
            - Nuevas funcionalidades

            ## 📚 Conceptos Clave
            - Patrones de diseño
            - APIs relevantes
            - Bibliotecas utilizadas

            ## 💡 Puntos de Aprendizaje
            - Mejores prácticas
            - Técnicas interesantes
            - Optimizaciones

            ## 📖 Referencias
            - Documentación relevante
            - Recursos de aprendizaje

            Enfócate en el valor educativo y el contexto técnico.`;

            const completion = await openai.chat.completions.create({
              model: "gpt-4",
              messages: [
                { 
                  role: "system", 
                  content: "Eres un experto desarrollador Android especializado en Kotlin, arquitectura limpia y mejores prácticas de desarrollo móvil."
                },
                { role: "user", content: prompt }
              ],
              temperature: 0.2
            });

            const summary = completion.choices[0].message.content;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `# 📖 Resumen Técnico\n\n${summary}`
            });
